{"version":3,"sources":["components/AppBar.jsx","App.js","serviceWorker.js","index.js","whatsapp.svg"],"names":["cards","withStyles","theme","appBar","position","heart","color","fontSize","fab","bottom","spacing","unit","right","icon","marginRight","heroUnit","backgroundColor","palette","background","paper","heroContent","maxWidth","margin","padding","concat","heroButtons","marginTop","layout","Object","defineProperty","width","marginLeft","breakpoints","up","cardGrid","card","height","display","flexDirection","cardMedia","paddingTop","cardContent","flexGrow","footer","props","classes","react_default","a","createElement","Fragment","CssBaseline_default","AppBar_default","className","Toolbar_default","Code_default","Typography_default","variant","noWrap","dist","component","align","gutterBottom","style","paragraph","Grid_default","container","justify","item","Button_default","classNames","map","key","sm","md","lg","Card_default","CardMedia_default","image","title","CardContent_default","CardActions_default","size","href","target","rel","textDecoration","App","components_AppBar","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.78e96198.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport CodeIcon from \"@material-ui/icons/Code\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport WAicon from \"../whatsapp.svg\";\nimport {\n  BrowserView,\n  MobileView,\n  isBrowser,\n  isMobile\n} from \"react-device-detect\";\n\nconst styles = theme => ({\n  appBar: {\n    position: \"Fixed\"\n  },\n  heart: {\n    color: \"Blue\",\n    fontSize: 20\n  },\n  fab: {\n    position: \"Fixed\",\n    bottom: theme.spacing.unit * 2,\n    right: theme.spacing.unit * 2\n  },\n  icon: {\n    marginRight: theme.spacing.unit * 2\n  },\n  heroUnit: {\n    backgroundColor: theme.palette.background.paper\n  },\n  heroContent: {\n    maxWidth: 600,\n    margin: \"0 auto\",\n    padding: `${theme.spacing.unit * 8}px 0 ${theme.spacing.unit * 6}px`\n  },\n  heroButtons: {\n    marginTop: theme.spacing.unit * 4\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\n      width: 1100,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  cardGrid: {\n    padding: `${theme.spacing.unit * 8}px 0`\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\" // 16:9\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing.unit * 6\n  }\n});\n\nconst cards = [1, 2, 3, 4];\n\nfunction Album(props) {\n  const { classes } = props;\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <CodeIcon className={classes.icon} />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Codewrap\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main>\n        {/* Hero unit */}\n        <div className={classes.heroUnit}>\n          <div className={classes.heroContent}>\n            {/* <BrowserView>\n              <h1> This is rendered only in browser </h1>\n            </BrowserView> */}\n            <MobileView>\n              {/* <a href=\"https://wa.me/91888888888?text=Hey!%20I'm%20eager%20to%20get%20my%20App%20developed.\">\n                <Fab className={classes.fab} color=\"default\">\n                  <Avatar src={WAicon} alt=\"my image\" />\n                </Fab>\n              </a> */}\n            </MobileView>\n            <Typography\n              component=\"h2\"\n              variant=\"h3\"\n              align=\"center\"\n              color=\"textPrimary\"\n              gutterBottom\n              style={{ marginTop: 30 }}\n            >\n              &lt;CODEWRAP&gt;\n            </Typography>\n            <Typography\n              variant=\"h6\"\n              align=\"center\"\n              color=\"textSecondary\"\n              paragraph\n            >\n              We Make Super Fast Web & Mobile Apps!\n            </Typography>\n\n            <div className={classes.heroButtons}>\n              <Grid container spacing={16} justify=\"center\">\n                <Grid item>\n                  <Button variant=\"contained\" color=\"primary\">\n                    Contact Us\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button variant=\"outlined\" color=\"primary\">\n                    Meet Us\n                  </Button>\n                </Grid>\n              </Grid>\n            </div>\n          </div>\n        </div>\n        <div className={classNames(classes.layout, classes.cardGrid)}>\n          {/* End hero unit */}\n          <Grid container spacing={16}>\n            {cards.map(card => (\n              <Grid item key={card} sm={100} md={3} lg={3}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22288%22%20height%3D%22225%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20288%20225%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_164edaf95ee%20text%20%7B%20fill%3A%23eceeef%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A14pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_164edaf95ee%22%3E%3Crect%20width%3D%22288%22%20height%3D%22225%22%20fill%3D%22%2355595c%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2296.32500076293945%22%20y%3D%22118.8%22%3EPortFolio%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\" // eslint-disable-line max-len\n                    title=\"Image title\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      PortFolio—{card}\n                    </Typography>\n                    <Typography>PortFolio Comming Soon.</Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button size=\"small\" color=\"primary\">\n                      View\n                    </Button>\n                    <Button size=\"small\" color=\"primary\">\n                      Edit\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      </main>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          Stay Tuned !\n        </Typography>\n        <Typography\n          variant=\"subtitle1\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\"\n        >\n          Made with<span className={classes.heart}> &hearts; </span>in India by\n          <a\n            href=\"https://www.google.com/search?q=%40ontrooo_jain\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={{ textDecoration: \"none\" }}\n          >\n            Ontrooo\n          </a>\n          {/* <br />\n          (Beta v1.0) By{\" \"}\n          <a\n            href=\"https://www.google.com/search?q=%40ontrooo_jain\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={{ textDecoration: \"none\" }}\n          >\n            Ontrooo.\n          </a> */}\n        </Typography>\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n  );\n}\n\nAlbum.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Album);\n","import React from \"react\";\nimport \"./App.css\";\nimport AppBar from \"./components/AppBar\";\n\nfunction App() {\n  return <AppBar />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/whatsapp.41f1fc2e.svg\";"],"sourceRoot":""}